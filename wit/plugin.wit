package plugins:main

interface imports {
  load-model: func(ty: model-type) -> model-id
  unload-model: func(id: model-id)
  infer: func(id: model-id, input: string, max-tokens: option<u32>, stop-on: option<string>) -> string
  print: func(str: string)
  
  record model-id {
    id: u32,
  }

  variant model-type { MPT(mpt-type), gpt-neo-x(gpt-neo-x-type), llama(llama-type) }
  enum llama-type { vicuna, guanaco, wizardlm }
  enum mpt-type { base, story, instruct, chat }
  enum gpt-neo-x-type { large-pythia, tiny-pythia, dolly-seven-b, stablelm }
}

interface definitions {
  record definition {
    name: string,
    description: string,
    inputs: list<input>
  }

  variant input {
    text(string),
    embedding(list<float32>),
  }

  structure: func() -> definition
}

world plugin-world {
  import imports
  export definitions

  export start: func()
}